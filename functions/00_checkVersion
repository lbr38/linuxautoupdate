#!/bin/bash
# à revoir (adapter liens github)
# remplacer les url par des urls de gitlab

# Vérifie si une nouvelle version de ce script est disponible et averti l'utilisateur qu'il faut la déployer
if [ "$CONF_ALLOW_AUTOUPDATE" == "yes" ];then # Si l'autoupdate est autorisé alors on vérifie si une nouvelle version est dispo et on applique la maj si c'est le cas
	echo -ne "Vérification des mises à jour de ce script : "
	VERSION_DISPO=$(curl -s "https://raw.githubusercontent.com/lbr38/linuxautoupdate/dev/linuxautoupdate.version" | grep 'VERSION=' | awk -F= '{print $2}')
	VERSION_DISPO_MD5SUM=$(curl -s "https://raw.githubusercontent.com/lbr38/linuxautoupdate/dev/linuxautoupdate.version" | grep 'MD5SUM=' | awk -F= '{print $2}')
	if [ -z "$VERSION_DISPO" ] || [ -z "$VERSION_DISPO_MD5SUM" ];then
		echo -e "[$ROUGE ERREUR $RESET] lors de la récupération du numéro de version disponible\n"
	elif [ "$VERSION" != "$VERSION_DISPO" ] || [ "$MD5SUM" != "$VERSION_DISPO_MD5SUM" ];then
		echo -e "${JAUNE}Une nouvelle version de ce script est disponible${RESET}"
		cd "${BASE_DIR}" &&

		# Téléchargement de la nouvelle version :
		echo -ne "\n → Téléchargement du nouveau script :\t\t" &&
		wget -q -O linuxautoupdate.last "https://raw.githubusercontent.com/lbr38/linuxautoupdate/dev/linuxautoupdate"
		if [ $? -eq "0" ];then
			echo -e "[$VERT OK $RESET]"
		else
			echo -e "[$ROUGE ERREUR $RESET] lors du téléchargement"
			(( ERREUR_MAJ++ ))
			clean_exit
		fi

		# Téléchargement du script de mise à jour :
		echo -ne " → Téléchargement du script d'auto-mise à jour :\t" &&
		wget -q -O linuxautoupdate.maj.sh "https://raw.githubusercontent.com/lbr38/linuxautoupdate/dev/linuxautoupdate.maj.sh"
		if [ $? -eq "0" ];then
			chmod 700 linuxautoupdate.maj.sh &&
			echo -e "[$VERT OK $RESET]"
		else
			echo -e "[$ROUGE ERREUR $RESET] lors du téléchargement"
			(( ERREUR_MAJ++ ))
			clean_exit
		fi

		# Exécution du script de mise à jour. On lui donne en paramètre les paramètres utilisés lors de l'exécution de ce script. C'est lui qui relancera ensuite le nouveau script de maj avec les même paramètres appelés :
		exec "${BASE_DIR}/linuxautoupdate.maj.sh" 
		# Tout ce qui est après la commande exec ne sera jamais exécuté 
	else # Si il n'y a pas de nouvelle version disponible, il n'y a rien à faire. On affiche OK car la vérification a été faite sans erreur
		echo -e "Pas de nouvelle version disponible"
	fi
fi